{"version":3,"sources":["components/VideoGallery.js","DancePage.js","ProjectPage.js","HomePage.js","AppHeader.js","App.js","serviceWorker.js","index.js"],"names":["youtubeURLPrefix","VideoGallery","props","react_default","a","createElement","image_gallery_default","items","videos","map","item","original","thumbnail","renderItem","videoURL","videoID","substring","length","className","width","height","key","frameBorder","src","concat","allow","allowFullScreen","getEmbedLink","lazyLoad","showFullscreenButton","showPlayButton","directedVideos","performedVideos","DancePage","href","components_VideoGallery","ProjectPage","HomePage","AppHeader","Navbar","light","expand","NavbarBrand","Nav","navbar","NavItem","NavLink","App","react_router_dom","basename","src_AppHeader","react_router","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ad53c68.chunk.js","sourcesContent":["import React from 'react';\nimport ImageGallery from 'react-image-gallery';\n\nconst youtubeURLPrefix = 'https://www.youtube.com/watch?v=';\n\nfunction getEmbedLink(videoURL) {\n    const videoID = videoURL.substring(youtubeURLPrefix.length);\n    return (\n        <iframe\n            className=\"video-player\"\n            width=\"516\"\n            height=\"315\"\n            key={videoID}\n            frameBorder={0}\n            src={`https://www.youtube.com/embed/${videoID}`}\n            allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n        ></iframe>\n    )\n}\n\nfunction VideoGallery(props) {\n    return (\n        <ImageGallery\n            items={props.videos.map((item) => ({\n                original: youtubeURLPrefix + item,\n                thumbnail: 'https://img.youtube.com/vi/' + item + '/0.jpg'\n            }))} \n            renderItem={(item) => {\n                return getEmbedLink(item.original)\n            }}\n            lazyLoad={true}\n            showFullscreenButton={false}\n            showPlayButton={false}\n        />\n    )\n}\n\nexport default VideoGallery;","import React from 'react';\nimport VideoGallery from './components/VideoGallery';\n\nconst directedVideos = [\n    'DKkLxDJn0Nk',  // Never Ever (ADT Cover)\n    'DJyOuvt3Y0Y',  // Crazy In Love (ADT Setlist)\n    'd7fpzgDNBM8',  // Journey to the West (ADT Setlist)\n    'FMnCP9tpZwE',  // Home (ADT Setlist)\n    'K36xAyBoUzM',  // Energetic (ADT Cover)\n    '91VAGIMosWg',  // Heaven (ADT Setlist)\n    '3daGt3rhmdo',  // Our Dawn is Hotter Than Day (ADT Cover)\n    'BkzYif8noMo',  // Bboom Bboom (ADT Cover)\n    'N34kackV13E',  // Blossoms (ADT Setlist)\n    '0AmoquZIBoQ',  // Just Right (ADT Cover)\n];\n\nconst performedVideos = [\n    'ilm93lcoO_o', // Alive (Ridonkulous)\n    'w-yFipFSMyM', // Winter 2020 (Ridonkulous)\n    'DKkLxDJn0Nk',  // Never Ever (ADT Cover)\n    'tVd5vZAXYEA', // In the Rain (ADT Setlist)\n    'iMiX9Rnie6A', // Fall 2019 (Ridonkulous)\n    'yoYccjhCJCo', // No Air (ADT Setlist)\n    'YMCuCsQV7lY', // Youth (ADT Setlist)\n    'n769vEc2CeE', // Fate (ADT Setlist)\n    'K36xAyBoUzM',  // Energetic (ADT Cover)\n    'kxemxSKx7-A', // Stay With Me (ADT Setlist)\n    'A3bZmbvwlrU', // Jasmine Flowers (ADT Setlist)\n    '_9TmhM-STHg', // Empathy (ADT Setlist)\n    '6WcU4SvXRaE', // Help Me (ADT Cover)\n    '3daGt3rhmdo',  // Our Dawn is Hotter Than Day (ADT Cover)\n    'ueI32WJkUGg', // The Chaser (ADT Setlist)\n    'N34kackV13E',  // Blossoms (ADT Setlist)\n    '0AmoquZIBoQ',  // Just Right (ADT Cover)\n    'fHD2XPp3pu4', // Clap (ADT Cover)\n    'i0-cLsoIc6M', // Blood, Sweat, and Tears (ADT + Synco Collaboration Cover)\n    '5swu3MopTNk', // Pretty Boom (ADT Setlist)\n    'HB4LazIVPfY', // Water Spirits (ADT Setlist)\n    'yI8IUBweNWc', // You Are (ADT Cover)\n];\n\nconst DancePage = () => {\n    return (\n        <div className=\"dance-page\">\n            <div className=\"dance-heading\">\n                Dance\n            </div>\n            <div className=\"dance-paragraph\">\n                I am a co-captain and a guy hiphop choreographer of <a href=\"http://adt.mit.edu/\" className=\"dance-link\">MIT Asian Dance Team</a>, as well as a former traditional choreographer. From Fall 2019, I became a part of <a href=\"http://ridonk.mit.edu/\" className=\"dance-link\">MIT Ridonkulous</a>, a competitive urban dance team. I grew up dancing ballet and Chinese traditional dance and started dancing hip hop in high school.\n            </div>\n\n            <div className=\"dance-title\">\n                Directed/Choreographed Pieces\n            </div>\n\n            <div className=\"dance-videos\">\n                <VideoGallery videos={directedVideos}/>\n            </div>\n\n            <div className=\"dance-title\">\n                Performed Pieces\n            </div>\n\n            <div className=\"dance-videos\">\n                <VideoGallery videos={performedVideos}/>\n            </div>\n        </div>\n        \n    );\n};\n\nexport default DancePage;","import React from 'react';\n\nconst ProjectPage = () => {\n    return (\n        <div className=\"project-page\">\n            <header className=\"App-basic\">Page under construction! Check back soon!</header>\n        </div>\n    );\n};\n\nexport default ProjectPage;\n","import React from 'react';\n\nconst HomePage = () => {\n    return (\n        <div className=\"home-page\">\n            <div className=\"home-header\">\n                Welcome to Erica Chiu's website!\n            </div>\n            <p>\n                I am an undergraduate at MIT studying computer science and mathematics, interested in machine learning. At MIT, I am involved with a few <a href=\"#/dance\">dance</a> organizations, as well as <a href=\"https://techx.io\">TechX</a>, an organization that hosts technology events.\n            </p>\n\n            <p>\n                This summer, I am excited to be interning at <a href=\"https://nuro.ai\">Nuro</a> on the Machine Learning team. Last summer, I interned at <a href=\"https://www.salesforce.com/products/einstein/overview/\">Salesforce Einstein</a> on the Modeling Team, working on AutoML features. \n            </p>\n        </div>\n        \n    );\n};\n\nexport default HomePage;","import React from 'react';\nimport {\n    Navbar,\n    NavbarBrand,\n    NavItem,\n    NavLink,\n    Nav\n} from 'reactstrap';\n\nconst AppHeader = () => {\n    return (\n        <div>\n            <Navbar light expand=\"md\" className=\"header\">\n                <NavbarBrand href=\"#/\"><div className=\"header-brand\">Erica Chiu</div></NavbarBrand>\n                <Nav className=\"mr-auto\" navbar>\n                    <NavItem>\n                        <NavLink href=\"#/projects\"><div className=\"header-section\">Projects</div></NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink href=\"#/dance\"><div className=\"header-section\">Dance</div></NavLink>\n                    </NavItem>\n                </Nav>\n            </Navbar>\n        </div>\n    );\n};\n\nexport default AppHeader;","import React, { Component } from 'react';\nimport {HashRouter, Route} from 'react-router-dom';\nimport DancePage from './DancePage';\nimport ProjectPage from './ProjectPage';\nimport HomePage from './HomePage';\nimport './App.css';\nimport AppHeader from './AppHeader';\n\n\nclass App extends Component {\n  render() {\n    return (\n        <HashRouter basename=\"/\">\n          <div className=\"app\">\n            <AppHeader/>\n            <Route exact path=\"/\" component={HomePage}/>\n            <Route path=\"/projects\" component={ProjectPage}/>\n            <Route path=\"/dance\" component={DancePage}/>\n          </div>\n        </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}